program     		→ declaration* EOF ;

### Statements ###

declaration 		→ var_decl | statement ;
statement   		→ expr_stmt | if_stmt | print_stmt | block ;
if_stmt         → "if" "(" expression ")" statement ( "else" statement )? ;
block           → "{" declaration* "}"
expr_stmt 			→ expression ";" ;
print_stmt 			→ "print" expression ";" ;

### Expressions ###

expression 			→ literal | unary | binary | grouping ;
- list 					→ assignment ( ( "," ) list )* ;
- ternary       → expression "?" expression ":" expression ;
assignment      → IDENTIFIER "=" assignment | equality ;
equality       	→ comparison ( ( "!=" | "==" ) comparison )* ;
comparison     	→ addition ( ( ">" | ">=" | "<" | "<=" ) addition )* ;
addition       	→ multiplication ( ( "-" | "+" ) multiplication )* ;
multiplication 	→ unary ( ( "/" | "*" ) unary )* ;
unary          	→ ( "!" | "-" ) unary | primary ;
primary        	→ NUMBER | STRING | "false" | "true" | "nil" | "(" expression ")" | IDENTIFIER ;

### Glossary ###

Terminal 	    - Code to match and consume a token
Non-terminal	- Call to that rule’s function
|						  - If or switch statement
* or +  			- While or for loop
?	            - If statement
