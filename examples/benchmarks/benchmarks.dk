req "lib/brood/bench" as bench;

use bench::benchmark;
use bench::DISABLED_PREFIX;

# let REPS = 10_000_000;
let REPS = 1024;

let x = 0;

fn simple_function() {}

fn fib(n) {
  if n <= 1 {
    ret n;
  } else {
    ret fib(n - 2) + fib(n - 1);
  }
}

std::vm::gc::print_stats();

benchmark(DISABLED_PREFIX + "simple math", REPS, [x] |timer: Timer, i| {
  timer.start();
  i += 1;
  x += i + i * i / i % i;
  timer.stop();
});

std::vm::gc::print_stats();
std::vm::gc::reset_stats();

benchmark(DISABLED_PREFIX + "function calls", REPS, |timer: Timer, _i| {
  timer.start();
  simple_function();
  timer.stop();
});

std::vm::gc::print_stats();
std::vm::gc::reset_stats();

let $OBJ = struct {
  foobarbaz: "foobarbaz"
};

benchmark(DISABLED_PREFIX + "global & member access", REPS, |timer: Timer, _| {
  timer.start();
  $OBJ.foobarbaz;
  timer.stop();
});

std::vm::gc::print_stats();
std::vm::gc::reset_stats();

benchmark("fib", 1, |timer: Timer, _| {
  timer.start();
  fib(30);
  timer.stop();
});

std::vm::gc::print_stats();
