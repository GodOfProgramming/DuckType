---
$schema: "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json"
name: "SimpleScript"
env:
  IDENT: "[A-Za-z_]\\w*"
  DIGIT: "[0-9]+(?:.[0-9]+)?"
  INTERPOLATED: "\\${\\s*.*\\s*}"
  REG: "\\/.*\\/"
patterns:
  - include: "#comments"
  - include: "#strings"
  - include: "#keywords"
  - include: "#support"
  - include: "#meta"
  - include: "#ident"
  - include: "#digits"
repository:
  keywords:
    patterns:
      - name: "keyword.control"
        match: "\\b(break|cont|else|for|if|loop|match|ret|while)\\b"
      - name: "keyword.operator"
        match: "\\b(and|or)\\b|\\+|\\-|\\/|\\*"
      - name: "keyword.declaration"
        match: "\\b(let|class|fn|req|new)\\b"
      - name: "storage.type"
        match: "\\b(error|bool|number|string|list)\\b"
      - name: "support.function.builtin"
        match: "\\b(print)\\b"
      - name: "constant.language.null"
        match: "\\b(nil)\\b"
      - name: "constant.language.boolean"
        match: "\\b(true|false)\\b"
  support:
    patterns:
      - name: "support.class"
        patterns:
          - include: "#class"
      - name: "support.function"
        patterns:
          - include: "#function"
  meta:
    patterns:
      - name: "meta.function"
        patterns:
          - include: "#function"
      - name: "meta.definition.function"
        patterns:
          - include: "#function"
  class:
    name: "entity.name.type.class"
    match: "(?<=class)\\s+${ IDENT }"
  function:
    name: "entity.name.function"
    match: "(?<=fn)\\s+${ IDENT }"
  strings:
    patterns:
      - name: "string.quoted.double"
        begin: '"'
        end: '"'
        patterns:
          - name: "constant.character.escape"
            match: "\\."
          - name: "string.template"
            begin: "\\${"
            end: "}"
            patterns:
              - include: "#ident"
              - include: "#function"
              - include: "#digit"
      - name: "string.quoted.single"
        begin: "'"
        end: "'"
  digits:
    patterns:
      - name: "constant.numeric"
        match: "\\b(${ DIGIT })\\b"
  ident:
    patterns:
      - name: "punctuation.definition.variable"
        match: "$"
      - name: "variable.language"
        match: "\\b(self|super)\\b"
      - name: "variable.other.readwrite.global"
        match: "\\b(\\$(?=\\w)\\w*)\\b"
      - name: "variable.other.readwrite"
        match: "\\b(${ IDENT })\\b"
  comments:
    patterns:
      - name: "comment.line.pound"
        match: "#.*"
scopeName: "source.ss"
